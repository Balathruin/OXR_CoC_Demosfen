--------------------------------------------------
--** Скрипт подработки ГГ проводником.
--** Автор - SadBlackFox
--------------------------------------------------
local stdzarplata = 1000
local guid = {}
curr_guid = {}

function load_state()
	guid = jg_utils.l_v("guid", {})
	curr_guid = jg_utils.l_v("curr_guid", {})
	local newgame = jg_utils.l_v("newgame")	-- хз как ещё сделать срабатывание при НИ
	if not newgame then jg_utils.s_v("newgame", 'Каллбек сработал') return jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower') end
end 
function save_state()
	jg_utils.s_v("guid", guid)
	jg_utils.s_v("curr_guid", curr_guid)
end
function squad_on_npc_death(squad,se_npc)
	if squad and (squad.id == curr_guid.squad_id) and (squad:npc_count() == 0) then
		if db.actor:has_info('guider_start') then
--		xr_statistic.inc_actor_reputation(-1000)
	    dxr_statistics.increment_reputation(-1000)
		end
		clear()
	end
end
function on_game_start()
	RegisterScriptCallback("load_state",load_state)
	RegisterScriptCallback("save_state",save_state)
	RegisterScriptCallback("squad_on_npc_death",squad_on_npc_death)
end

function clear()
	db.actor:disable_info_portion('guider_start')
	--level.map_remove_object_spot(curr_guid.id_smart, 'storyline_task_location')
	curr_guid = {}
	jg_utils.d_v("curr_guid")
	jg_timers.stop_g_timer('guid_fail')
end 

function ins_mass_onl()
	local mass_onl = {}
	for k, id in pairs(db.OnlineStalkers) do
		local npc = level.object_by_id(id)
		if npc and jg_utils.is_not_quest_npc(alife():object(id)) and not (id == get_comm_id(curr_guid.squad_id)) and dialogs_axr_companion.is_not_actor_companion(db.actor, npc) and jg_utils.is_not_enemy(db.actor, npc) and dialogs_axr_companion.is_not_hostage_task_giver(db.actor, npc) and xr_conditions.is_squad_commander(db.actor, npc) then
			mass_onl[#mass_onl + 1] = npc
		end
	end
	return (#mass_onl ~= 0) and mass_onl[math.random(#mass_onl)] or nil
end

--[[
	Функция поиска НПС, которому нужен проводник. 
	Если такой НПС находится, то отправляется сообщение в сеть.
	Вызывается таймерами
]]
function prepare_follower()
	local npc = ins_mass_onl()
	if npc == nil then
		return jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower')
	end
	local level_name, size = jg_gps.go_poisk()
	if level_name == nil or size == nil then
		return jg_timers.g_start_timer('guid_msg',0,0,15,'jg_guider','prepare_follower')
	end
	local tmp_smarts = {}
	local sim = alife()
	local gg = game_graph()
	for name, sobj in pairs(SIMBOARD.smarts_by_names) do
		if level_name == sim:level_name(gg:vertex(sobj.m_game_vertex_id):level_id()) then
			tmp_smarts[#tmp_smarts + 1] = sobj
		end
	end
	local smart = tmp_smarts[math.random(#tmp_smarts)]
	guid.id_smart		= smart.id
	guid.target_level	= level_name
	guid.description	= dynamic_news_helper.GetPointDescription(smart)
	guid.squad_id		= get_object_squad(npc).id
	guid.size			= size
	guid.timer			= 2*(size + math.random(0, size))
	guid.zarplata		= 2*(math.ceil(size * math.random(stdzarplata * 0.5, stdzarplata * 1.5)))
	guid.neustoika		= math.ceil(math.random(guid.zarplata * 0.5, guid.zarplata * 1.5))
	news_manager.send_tip(db.actor, string.format(game.translate_string('st_jg_14'), game.translate_string(level_name), dynamic_news_helper.GetPointDescription(npc), npc:character_name()), nil, "tourist", 15000)
	return
	-- Запускаем таймер следующего вызова этой функции
	jg_timers.g_start_timer('guid_msg',0,math.random(6),0,'jg_guider','prepare_follower')
end

function activate()
	curr_guid = jg_utils.copy_tbl(guid)
	guid = {}
	jg_utils.d_v("guid")
	-- Старт таймера фэйла
	jg_timers.g_start_timer('guid_fail',0,curr_guid.timer,0,'jg_guider','fail_time')
	--level.map_add_object_spot_ser(curr_guid.id_smart, 'storyline_task_location', 'Сталкеру необходимо попасть '..curr_guid.description)
end

function complete(first_speaker,second_speaker)
	dialogs.relocate_money(db.actor,curr_guid.zarplata,"in")
--	xr_statistic.inc_actor_reputation(100)
	dxr_statistics.increment_reputation(100)
	local snpc = alife():object(get_comm_id(curr_guid.squad_id))
	alun_utils.execute_script_on_squad(snpc,axr_companions.remove_from_actor_squad)
	clear()
end

function fail_time()
	local npc = level.object_by_id(get_comm_id(curr_guid.squad_id))
	news_manager.send_tip(db.actor, string.format(game.translate_string('st_jg_15'), curr_guid.neustoika, npc and npc:character_name() or ''))
	fail()
end

function fail()
--[[	На данный момент нет условий, при котором напарник был бы в оффлайне(они принудительно всегда в онлайне),
		поэтому использование переключателя нецелесообразно
	local func = function()
					local squad = alife():object(curr_guid.squad_id)
					local commander_id = squad and squad:commander_id()
					local npc = level.object_by_id(commander_id)
					news_manager.send_tip(db.actor, "Мы опоздали! Мы же договаривались!! Плати неустойку в "..curr_guid.neustoika..' рублей.'..'. '..(npc:character_name() or ''))
					if db.actor:money() >= curr_guid.neustoika then 
						dialogs.relocate_money(db.actor,curr_guid.neustoika,"out")
					else
						dialogs.relocate_money(db.actor,db.actor:money(),"out")
					end
					clear()
				end
	local squad = alife():object(curr_guid.squad_id)
	if not squad then return end
	jg_utils.squad_switcher(squad,func) -- выкидыш при помощи переключателя
]]
	local m = db.actor:money()
	if (m >= curr_guid.neustoika) then 
		jg_utils.change_money(curr_guid.neustoika, "out")
	else
		jg_utils.change_money(m, "out")
	end
--	xr_statistic.inc_actor_reputation(-500)
	dxr_statistics.increment_reputation(-100)
	local snpc = alife():object(get_comm_id(curr_guid.squad_id))
	alun_utils.execute_script_on_squad(snpc,axr_companions.remove_from_actor_squad)
	clear()
end

function get_comm_id(squad_id)
	if squad_id == nil then return end
	local squad = alife():object(squad_id)
	return squad and squad:commander_id()
end

--///////////////////////////////// Диалоговые функции

function is_guider_companion(actor, npc)
	return get_object_squad(dialogs.who_is_npc(actor,npc)).id == curr_guid.squad_id
end

function is_not_guider_companion(actor, npc)
	return not (get_object_squad(dialogs.who_is_npc(actor,npc)).id == curr_guid.squad_id)
end

function prec_1(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	local squad = get_object_squad(npc)
	local squad_id = squad and squad.id
	return squad and (squad_id == guid.squad_id or squad_id == curr_guid.squad_id) and (npc:id() == get_comm_id(squad_id))
end

function prec_2(actor, npc)
	return (db.actor:money() >= guid.neustoika)
end

function prec_3(actor, npc)
	return (db.actor:money() < guid.neustoika)
end

function prec_4(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	local squad = get_object_squad(npc)
	return squad and (squad.id == curr_guid.squad_id)
end

function prec_5(actor, npc)
	local npc = dialogs.who_is_npc(actor,npc)
	return (curr_guid.target_level == level.name()) and ((((type(npc.position) == "function" and npc:position()) or npc.position):distance_to(alife():object(curr_guid.id_smart).position)) <= 50)
end

function get_phrase_1(actor, npc)
	return string.format(game.translate_string('st_jg_16'), guid.timer, guid.description, guid.zarplata, guid.neustoika)
end

function get_phrase2(actor, npc)
	return string.format('%s %s', game.translate_string('st_jg_17'), curr_guid.description)
end

function get_phrase3(actor, npc)
	return string.format(game.translate_string('st_jg_18'), curr_guid.neustoika)
end
