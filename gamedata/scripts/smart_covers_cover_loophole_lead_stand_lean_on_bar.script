local	temp = {}
if (move ~= nil) then
	temp = move
end
move	= temp

function get_smart_cover_cover_loophole_lead_stand_lean_on_bar()
	return {
			loopholes = {
				smart_covers_loophole_lead_stand_lean_on_bar.get_loophole_lead_stand_lean_on_bar("lead_stand_lean_on_bar",	vector():set(0,0,0), vector():set(1,0,0),	vector():set(1,0,0))
			},

	
			transitions = {
			--' Анимации входа в бойницы
			{
				vertex0 = "",
				vertex1 = "lead_stand_lean_on_bar",
				weight = 1.0,
				actions =	{
							{
								precondition_functor = "smart_covers.script_functor_true",
								precondition_params = "",
                                actions =	{
											{
												animation = "lead_1_idle_to_bar_1",
												position = VEC_ZERO,
												body_state = move.crouch, movement_type = move.run,
											},
											},
							}
							}
			},


			--' Анимации выхода из бойниц.
			{
				vertex0 = "lead_stand_lean_on_bar",
				vertex1 = "",
				weight = 1.1,
				actions =	{
							{
								precondition_functor = "smart_covers.script_functor_true",
								precondition_params = "",
                                actions =	{
											{
												animation = "lead_1_bar_to_idle_1",
												position = VEC_ZERO,
												body_state = move.standing, movement_type = move.run,
											},
											},
							}
							}
			}
			}
	}
end


function exit_random(p)
	return math.random(100) <= tonumber(p)
end