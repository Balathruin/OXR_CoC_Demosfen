------------------------------
-- PDA Stash View (CoC 1.5 R6)
-- script version 3
-- author: sLoPpYdOtBiGhOlE
------------------------------
local bid,cid = nil,nil

local function use_box(id, sid)
	local b = id and level.object_by_id(id)
	if (b) then
		if (coc_treasure_manager.caches[sid] and type(coc_treasure_manager.caches[sid]) == "string") then
			local items = alun_utils.str_explode(coc_treasure_manager.caches[sid],",")
			for i=1,#items do
				if (utils.is_ammo(items[i])) then
					create_ammo(items[i],b:position(),b:level_vertex_id(),b:game_vertex_id(),id,math.random(10,30))
				else
					alife():create(items[i],b:position(),b:level_vertex_id(),b:game_vertex_id(),id)
				end
			end
			local hud = get_hud()
			if (hud) then
				hud:HideActorMenu()
			end
			b:use(db.actor)
		else
			alife():release(alife():object(bid), true)
			bid = nil
			cid = nil
		end
		return true
	end
	return false
end

local function map_spot_menu_add_property(property_ui,id,level_name)
	local se_obj = alife_object(id)
	if not (se_obj) then
		return
	end
	if not (bid) then
		if (coc_treasure_manager.caches[id] and type(coc_treasure_manager.caches[id]) == "string") then
			local b = alife():create("hidden_box",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id())
			if (b) then
				bid = b.id
				cid = id
				alife():set_switch_online(bid,true)
				alife():set_switch_offline(bid,false)
				CreateTimeEvent(cid,"use_box",0,use_box,bid,cid)
			end
		elseif (IsInvbox(nil,se_obj:clsid()) and string.find(se_obj:name(), "inv_actor_backpack") == nil) then
			local b = id and level.object_by_id(id)
			if (b) then
				b:use(db.actor)
			end
		end
	end
end

local function actor_menu_mode_changed(mode, last_mode)
	if (mode == 0 and last_mode == 4) then
		if (bid) then
			local b = level.object_by_id(bid)
			if (b) then
				if not (b:is_inv_box_empty()) then
					local function itr(box,item)
						box:transfer_item(item,db.actor)
					end
					b:iterate_inventory_box(itr,b)
				end
				b = nil
			end
			alife():release(alife():object(bid), true)
			if (cid and coc_treasure_manager.caches[cid]) then
				for k, v in pairs({["treasure"] = true,["treasure_unique"] = true}) do
					if level.map_has_object_spot(cid, k) then
						level.map_remove_object_spot(cid, k)
					end
				end
				coc_treasure_manager.caches[cid] = false
				xr_effects.inc_counter("stashes_found")
				news_manager.send_treasure(1)
			end
		end
		bid = nil
		cid = nil
	end
end

function on_game_start()
	RegisterScriptCallback("map_spot_menu_add_property",map_spot_menu_add_property)
	RegisterScriptCallback("actor_menu_mode_changed",actor_menu_mode_changed)
end