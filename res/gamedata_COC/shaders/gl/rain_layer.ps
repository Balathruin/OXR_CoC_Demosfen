#include "common.h"
#include "lmodel.h"
#include "shadow.h"
#include "iostructs\p_rain_layer.h"


uniform float3x4 m_sunmask;	// ortho-projection
Texture2D	s_water;

#line 11 1
#ifdef GBUFFER_OPTIMIZATION
float4 _main ( float2 tc, float2 tcJ, float4 pos2d )
#else
float4 _main ( float2 tc, float2 tcJ )
#endif
{
#ifdef GBUFFER_OPTIMIZATION
	gbuffer_data gbd = gbuffer_load_data( tc, pos2d );
#else
	gbuffer_data gbd = gbuffer_load_data( tc );
#endif
	float4 _P = float4( gbd.P, 1.0 );
	//_P.w = 1.f;

	float4 PS = mul( m_shadow,  _P );

//	float s	= sample_hw_pcf( PS, float4(0,0,0,0) );

	float s	= shadow		(PS);

//	float s	= shadowtest_sun( PS, tcJ );

//	float 	d 	= sunmask( _P );

	float2 		tc1	= mul( m_sunmask, _P ).xy;		//

//	tc1 /= 10;

	tc1 /= 2;

	tc1 = frac(tc1);

	float4 water = textureLod( s_water, tc1, 0 );

//	water.xy = tc1;
//	water.z = 0;

//	d*= s;

//	return s;
//	return float4(s,0,0,0);
//	return float4(0,0,0,s/2);
//	return float4(0,0,d,s/2);

	water.xyz = (water.xzy-0.5)*2;

//	water.y	*= -1;

	water.xyz = mul( m_V, water.xyz );

	water *= s;

	return float4(water.xyz,s/2);
}
