local CLT = { -- ChangeLevelTbl
	mar_smart_terrain_base		= 'mar_smart_terrain_base',
	gar_smart_terrain_5_2		= 'gar_smart_terrain_5_2',
	esc_factory_bandit			= 'esc_factory_smart_terrain_10',
	tuzla_tonnel_guid_marsh		= 'mar_smart_terrain_doc',
	marsh_post_guid				= 'mar_smart_terrain_doc_2',
	marsh_pump_water_guid		= 'mar_smart_terrain_5_8',
	marsh_old_church_guid		= 'mar_smart_terrain_8_11',
	marsh_tech_yard_guid		= 'mar_smart_terrain_10_5',	
	yantar_guid_from_freedom_base = 'yan_smart_terrain_1_6',
	ds_soviet_store			    = 'cit_killers',
	zat_trash_station			= 'zat_b40_smart_terrain',
	mil_to_yant_on_heli			= 'yan_smart_terrain_6_4',
	jup_guid_bandit_cont		= 'jup_a12',
	red_forest_guid_mon			= 'red_bridge_bandit_smart_skirmish_mlr',
	l11_pripyat_guid_mon		= 'pri_monolith',
	pripyat_guid_mon			= 'pri_b306',
	jupiter_guid_mon			= 'jup_b208',
	agroprom_guid_military		= 'agr_smart_terrain_1_6',
	escape_guid_military		= 'esc_smart_terrain_3_16',
	darkscape_guid_military		= 'ds_kem2',
	agroprom_guid				= 'agr_smart_terrain_4_4',
	marsh_guid					= 'mar_smart_terrain_11_11',
	escape_village_guid			= 'esc_smart_terrain_2_12',
	trucks_cemetery_guid		= 'trc_sim_20',
	stancia_guid				= 'aes_smart_terran_soldier2',
	pripyat_2_guid				= 'pri_smart_neutral_stalker1',
	radar_guid					= 'rad_entrance',
	zaton_guid					= 'zat_stalker_base_smart',
	pripyat_guid				= 'pri_a16',
	l11_pripyat_guid			= 'pri_smart_neutral_stalker1',
	red_forest_guid				= 'red_smart_terrain_bridge',
	l05_bar_guid				= 'bar_visitors',
	yantar_guid					= 'yan_smart_terrain_6_4',
	military_guid				= 'mil_smart_terrain_7_7',
	garbage_guid				= 'gar_smart_terrain_3_5',
	escape_guid					= 'esc_smart_terrain_2_12',
	jupiter_guid				= 'jup_a6'
}

local aditional_spawn_table = {
-- {x, y, z, level_vertex_id, game_vertex_id, кол-во}
	spawn_1_11_af_medusa_kmb = {['af_medusa'] = {-245.78, -14.29, -16.55, 16254, 381}},
	spawn_povars_12_70 = {['ammo_12x70_buck'] = {25.58, -11.88, -236.22, 77453, 1986, 5}},
	spawn_povars_ammo_pkm_100 = {['ammo_pkm_100'] = {25.58, -11.88, -236.22, 77453, 1986, 5}},
	spawn_povars_9_18_6 = {['ammo_9x18_fmj'] = {25.58, -11.88, -236.22, 77453, 1986, 6}},
	spawn_povars_5_45_3 = {['ammo_5.45x39_fmj'] = {25.58, -11.88, -236.22, 77453, 1986, 3}},
	spawn_povars_5_45_6 = {['ammo_5.45x39_fmj'] = {25.58, -11.88, -236.22, 77453, 1986, 6}},
	spawn_povars_7_62 = {['ammo_7.62x54_7h1'] = {25.58, -11.88, -236.22, 77453, 1986, 2}},
	spawn_povars_berill = {['specops_outfit'] = {25.54, -11.88, -234.85, 77112, 1986}},
	spawn_wpn_ak74_jurov_task_2_1 = {['wpn_ak74_jurov_task_2'] = {-65.71, -31.52, -352.51, 314724, 571}},
	spawn_wpn_ak74_jurov_task_2_2 = {['wpn_ak74_jurov_task_2'] = {-106.22, -29.38, -394.22, 232856, 443}},
	spawn_wpn_saiga_rookie_pole = {['wpn_saiga_rookie_pole'] = {-164.93, 0.16, 77.97, 80940, 5146}},		
	wpn_svd_bandit_depo_task_1_1 = {['wpn_svd_bandit_depo_task_1'] = {-219.37, 1.37, 209.31, 1777, 971}},	
	wpn_svd_bandit_depo_task_1_2 = {['wpn_svd_bandit_depo_task_1'] = {-240.83, 3.53, 217.42, 203, 935}},	
	wpn_svd_bandit_depo_task_1_3 = {['wpn_svd_bandit_depo_task_1'] = {-213.45, 3.63, 269.33, 2672, 977}},		
}

function ch_lvl(p) -- ChangeLevel
    local se_obj = SIMBOARD.smarts_by_names[CLT[p]]
    local dist = db.actor:position():distance_to(se_obj.position)
    level.change_game_time(0,math.floor(dist/1000)+math.random(0,2),math.random(1,59))
    surge_manager.get_surge_manager().time_forwarded = true
    psi_storm_manager.get_psi_storm_manager().time_forwarded = true
    level_weathers.get_weather_manager():forced_weather_change()
    if (alife():level_name(game_graph():vertex(se_obj.m_game_vertex_id):level_id()) == level.name()) then
        db.actor:set_actor_position(se_obj.position)
    else
        ChangeLevel(se_obj.position,se_obj.m_level_vertex_id,se_obj.m_game_vertex_id,vector():set(0,0,0))
    end
end

function aditional_spawn(name)
	local tbl = aditional_spawn_table[name]
	for k, v in pairs(tbl) do
		for i = 1, (v[6] or 1) do 
			alife():create(k, vector():set(v[1], v[2], v[3]), v[4], v[5])
		end
	end
end

function act_h_s(sect, needed) -- actor_have_section -- Имеет ли актор опред. кол-во секций
	if not needed then
		needed = 1
	end
	local count = 0
	local function itr(actor, item) 
		if item:section() == sect then 
			count = count + 1 
		end 
	end
	db.actor:iterate_inventory(itr, db.actor)
	return count >= needed 
end

function act_h_m(count) -- actor_have_money  -- Имеет ли актор опред. кол-во денег
	return db.actor:money() >= count
end

function save_var(name, value)
	if not alife_storage_manager.get_state()['mlr'] then
		alife_storage_manager.get_state()['mlr'] = {}
	end
	alife_storage_manager.get_state()['mlr'][name] = value
end

function load_var(name)
	if not alife_storage_manager.get_state()['mlr'] then
		return
	end
	return alife_storage_manager.get_state()['mlr'][name]
end

function give_task(name)
	task_manager.get_task_manager():give_task(name)
end

function check_comm(name)
	return (character_community(db.actor) == name)
end