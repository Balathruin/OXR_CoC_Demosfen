------------------------------
-- Fast Travel system
-- author: Alundaio
------------------------------
local enabled = false 			-- change under settings in plugins\quick_travel.ltx
quick_travel_smarts = nil

local function map_spot_menu_add_property(property_ui,id,level_name)
	local se_obj = alife_object(id)
	if not (se_obj) then 
		return 
	end
	
	if (DEV_DEBUG_DEV) or (enabled and se_obj:clsid() == clsid.smart_terrain and quick_travel_smarts[se_obj:name()]) then 
		property_ui:AddItem(game.translate_string("st_pda_fast_travel"))
	end
end 

local function map_spot_menu_property_clicked(property_ui,id,level_name,prop)
	if (prop == game.translate_string("st_pda_fast_travel")) then 
		local se_obj = alife_object(id)
		if not (se_obj) then 
			return 
		end
		
		-- Prevent fast travel if in combat 
		if not (is_empty(xr_combat_ignore.fighting_with_actor_npcs)) then 
			get_hud():HidePdaMenu()
			SetHudMsg(game.translate_string("st_travel_event"),4)
			return 
		end 
		
		-- Prevent fast travel while overloaded
		local backpack = db.actor:item_in_slot(13)
		local suit = db.actor:item_in_slot(7)
		local diff = db.actor:get_total_weight() - db.actor:get_actor_max_walk_weight() - (suit and suit:get_additional_max_weight() or 0) - (backpack and backpack:get_additional_max_weight() or 0) - (artefact_degradation.art_weight_add or 0)
		if diff > 0 then
			get_hud():HidePdaMenu()
			SetHudMsg(game.translate_string("st_travel_overloaded"),4)
			return
		end
		
		-- Prevent fast travel if bleeding and/or iradiated.
		local bleeding = db.actor.bleeding > 0
		local radiation = db.actor.radiation > 0
		if (bleeding or radiation) then
			if (bleeding and radiation) then
				SetHudMsg(game.translate_string("st_sleep_bleeding_irradiated"),5)
			elseif (bleeding) then
				SetHudMsg(game.translate_string("st_sleep_bleeding"),4)
			elseif (radiation) then
				SetHudMsg(game.translate_string("st_sleep_irradiated"),4)
			end
			get_hud():HidePdaMenu()
			return
		end
		
		-- Prevent fast travel if an emission or psi-storm currently ongoing.
		if (xr_conditions.surge_started() or psi_storm_manager.is_started()) then
			SetHudMsg(game.translate_string("st_travel_event"),4)
			get_hud():HidePdaMenu()
			return
		end
		
		local dist = se_obj.online and db.actor:position():distance_to(se_obj.position) or 1000
		if (dist <= 50) then 
			SetHudMsg(game.translate_string("st_travel_already_here"),4)
			get_hud():HidePdaMenu()
			return
		end
	
		level.change_game_time(0,math.floor(dist/1000)+math.random(0,2),math.random(1,59))
		
		surge_manager.get_surge_manager().time_forwarded = true
		psi_storm_manager.get_psi_storm_manager().time_forwarded = true
		
		level_weathers.get_weather_manager():forced_weather_change()
		
		if (level_name == level.name()) then 
			db.actor:set_actor_position(se_obj.position)
		else
			ChangeLevel(se_obj.position,se_obj.m_level_vertex_id,se_obj.m_game_vertex_id,VEC_ZERO)
		end
	end
end

local function on_game_load()
	local pini = ini_file("plugins\\quick_travel.ltx")
	enabled = pini:r_bool_ex("settings","enable",false)

	if not (enabled) then 
		return 
	end
	
	local faction = character_community(db.actor):sub(7)
	quick_travel_smarts = alun_utils.collect_section(pini,faction,true)
	
	if not (is_empty(quick_travel_smarts)) then
		local sim = alife()
		for i=1,65534 do 
			local smart = sim:object(i)
			if (smart and smart:clsid() == clsid.smart_terrain and quick_travel_smarts[smart:name()]) then
				if (xr_statistic.actor_statistic.smart_terrain_visited[smart:name()]) then
					if (level.map_has_object_spot(i, "fast_travel") == 0) then 
						level.map_add_object_spot(i, "fast_travel", "st_pda_fast_travel")
					end
				end
			end
		end
	end
end

function on_game_start()
	RegisterScriptCallback("map_spot_menu_add_property",map_spot_menu_add_property)
	RegisterScriptCallback("map_spot_menu_property_clicked",map_spot_menu_property_clicked)
	RegisterScriptCallback("on_game_load",on_game_load)
end